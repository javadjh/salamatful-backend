version: "3.8"

services:
  dev:
    container_name: api_dev
    image: api_dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: api_prod
    image: api_prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
    restart: unless-stopped
  mongodb:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=<USERNAME>
      - MONGO_INITDB_ROOT_PASSWORD=<PASSWORD>
    networks:
      - nesjs-network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  nesjs-network:
